{"version":3,"sources":["utils/WinnerCalculator.js","utils/ApplicationConstants.js","transitions/Fade.js","components/Board/Tile.js","components/Board/Board.js","components/BoardSidebar/BoardHeader.js","components/BoardSidebar/BoardHistory.js","components/BoardSidebar/BoardSidebar.js","components/Game.js","components/App.js","index.js"],"names":["checkVerticalWinner","tileMatrix","r","ROW_SIZE","c","head","count","rd","curr","player","tiles","checkHorizontalWinner","COLUMN_SIZE","cd","checkDiagnolOneWinner","d","checkDiagnolTwoWinner","TRANSITION_STYLES","entering","opacity","entered","exiting","exited","Fade","inProps","in","duration","children","defaultStyle","transition","Transition","timeout","state","style","Tile","value","isWinner","isGameOver","onClick","className","Board","current","onPlayAgain","onTileClick","winner","isGameTie","turn","tileElements","map","tileRow","row","tileRowElements","tile","column","find","title","subtitle","GameOverModal","Button","variant","BoardHeader","onReset","highlight","ProgressBar","animated","min","max","now","HeaderInfo","HeaderActionGroup","BoardHistory","history","onSetGame","historyElements","index","winnerPlayer","reverse","HistoryItem","BoardSidebar","initialState","Array","fill","this","actionTypes","Object","freeze","SET_TILE","RESET","SET_GAME","reducer","action","type","currentTileMatrix","_","cloneDeep","highestRow","findLastIndex","concat","Game","useReducer","dispatch","Container","Row","Col","xs","lg","App","Image","src","Badge","noGutters","href","rel","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0bb00e5f.chunk.js","sourcesContent":["import { COLUMN_SIZE, ROW_SIZE } from \"../utils/ApplicationConstants\";\n\nexport default function checkWinner(tileMatrix) {\n  return checkVerticalWinner(tileMatrix)\n      || checkHorizontalWinner(tileMatrix)\n      || checkDiagnolOneWinner(tileMatrix)\n      || checkDiagnolTwoWinner(tileMatrix)\n      || { player: null, tiles: null };\n}\n\nconst checkVerticalWinner = (tileMatrix) => {\n  for (let r = 0; r < ROW_SIZE - 3; r++) {\n    for (let c = 0; c < COLUMN_SIZE; c++) {\n      const head = tileMatrix[r][c];\n      let count = 1;\n      for (let rd = 1; rd < 4; rd++) {\n        const curr = tileMatrix[r + rd][c];\n        if (head && head === curr) count++;\n      }\n      if (count === 4) return {\n        player: head,\n        tiles: [[r, c], [r + 1, c], [r + 2, c], [r + 3, c]]\n      };\n    }\n  }\n  return null;\n}\n\nconst checkHorizontalWinner = (tileMatrix) => {\n  for (let c = 0; c < COLUMN_SIZE - 3; c++) {\n    for (let r = 0; r < ROW_SIZE; r++) {\n      const head = tileMatrix[r][c];\n      let count = 1;\n      for (let cd = 1; cd < 4; cd++) {\n        const curr = tileMatrix[r][c + cd];\n        if (head && head === curr) count++;\n      }\n      \n      if (count === 4) return {\n        player: head,\n        tiles: [[r, c], [r, c + 1], [r, c + 2], [r, c + 3]]\n      };\n    }\n  }\n  return null;\n}\n\nconst checkDiagnolOneWinner = (tileMatrix) => {\n  for (let r = 0; r < ROW_SIZE - 3; r++) {\n    for (let c = 0; c < COLUMN_SIZE - 3; c++) {\n      const head = tileMatrix[r][c];\n      let count = 1;\n      for (let d = 1; d < 4; d++) {\n        const curr = tileMatrix[r + d][c + d];\n        if (head && head === curr) count++;\n      }\n      if (count === 4) return {\n        player: head,\n        tiles: [[r, c], [r + 1, c + 1], [r + 2, c + 2], [r + 3, c + 3]]\n      };\n    }\n  }\n  return null;\n}\n\nconst checkDiagnolTwoWinner = (tileMatrix) => {\n  for (let r = 0; r < ROW_SIZE - 3; r++) {\n    for (let c = 3; c < COLUMN_SIZE; c++) {\n      const head = tileMatrix[r][c];\n      let count = 1;\n      for (let d = 1; d < 4; d++) {\n        const curr = tileMatrix[r + d][c - d];\n        if (head && head === curr) count++;\n      }\n      if (count === 4) return {\n        player: head,\n        tiles: [[r, c], [r + 1, c - 1], [r + 2, c - 2], [r + 3, c - 3]]\n      };\n    }\n  }\n  return null;\n}","export const ROW_SIZE = 6;\nexport const COLUMN_SIZE = 7;\nexport const MAX_TURNS = ROW_SIZE * COLUMN_SIZE;\nexport const PLAYER_RED_TILE = 'red';\nexport const PLAYER_YELLOW_TILE = 'yellow';\n\nexport const BASE_HOST_URL = 'https://mattherwig.github.io/react-connect-four';","import { Transition } from 'react-transition-group';\n\nconst TRANSITION_STYLES = {\n  entering: { opacity: 1 },\n  entered: { opacity: 1 },\n  exiting: { opacity: 0.5 },\n  exited: { opacity: 0.5 },\n};\n\nexport default function Fade({in: inProps, duration = 500, children}) {\n  const defaultStyle = {\n    transition: `opacity ${duration}ms ease-in-out`,\n    opacity: 0.5\n  }\n\n  return (\n    <Transition\n      in={inProps} \n      timeout={duration}\n    >\n      {state => (\n        <div style={{\n          ...defaultStyle,\n          ...TRANSITION_STYLES[state]\n        }}>\n          {children}\n        </div>\n      )}\n    </Transition>\n  );\n}","import Fade from '../../transitions/Fade';\n\nimport './Tile.css';\n\nexport default function Tile({ value, isWinner, isGameOver, onClick }) {\n  return (\n    <Fade\n      duration={500}\n      in={!isGameOver || isWinner}\n    >\n      <button\n        className={`tile ${value ? `tile--${value}` : \"\"} ${isWinner ? \"tile--winner\" : \"\"}`}\n        onClick={onClick}\n      />\n    </Fade>\n  );\n}","import Tile from \"./Tile\";\nimport { Button } from \"react-bootstrap\";\nimport { MAX_TURNS } from \"../../utils/ApplicationConstants\";\n\nimport \"./Board.css\";\n\nexport default function Board({ current, onPlayAgain, onTileClick }) {\n  const isGameOver = !!current?.winner?.tiles,\n        isGameTie = !isGameOver && current.turn >= MAX_TURNS;\n\n  const tileElements = current.tileMatrix.map((tileRow, row) => {\n    const tileRowElements = tileRow.map((tile, column) => {\n      const winner = current.winner.tiles?.find(([r, c]) => r === row && c === column);\n      return (\n        <td key={column}>\n          <Tile \n            value={tile}\n            isWinner={!!winner}\n            isGameOver={isGameOver}\n            onClick={() => onTileClick(column)}\n          />\n        </td>\n      );\n    })\n    return <tr key={row}>{tileRowElements}</tr>;\n  });\n\n  return (\n    <div className=\"board\">\n      {isGameOver && <GameOverModal title=\"Game Over\" subtitle={`${current.winner.player} won the game!`} onPlayAgain={onPlayAgain} />}\n      {isGameTie && <GameOverModal title=\"Game Tie\" onPlayAgain={onPlayAgain} />}\n      <table>\n        <tbody>{tileElements}</tbody>\n      </table>\n    </div>\n  );\n}\n\nconst GameOverModal = ({ title, subtitle, onPlayAgain }) => {\n  return (\n    <div className=\"board--gameover\">\n      <h2><b>{title}</b></h2>\n      {subtitle && <h6>{subtitle}</h6>}\n      <br/>\n      <Button variant=\"dark\" onClick={onPlayAgain}>Play Again</Button>\n    </div>\n  );\n}\n","import { Button, ProgressBar } from \"react-bootstrap\";\nimport { MAX_TURNS } from \"../../utils/ApplicationConstants\";\n\nimport './BoardHeader.css';\n\nexport default function BoardHeader({ turn, player, winner, onReset }) {\n  return (\n    <div className=\"board-header\">\n      <HeaderInfo\n        title={winner?.player ? 'Winner:' : 'Turn:'}\n        highlight={player}\n      />\n      <HeaderActionGroup\n        onReset={onReset}\n      />\n      <ProgressBar\n          animated\n          variant={winner?.player ? \"danger\" : \"warning\"}\n          min={0}\n          max={MAX_TURNS}\n          now={winner ? MAX_TURNS : turn}\n        />\n    </div>\n  );\n}\n\nconst HeaderInfo = ({ title, highlight }) => {\n  return (\n    <>\n      <h4 className=\"board-header__title\">{title}</h4>\n      <h1 className=\"board-header__highlight\">{highlight}</h1>\n    </>\n  )\n}\n\nconst HeaderActionGroup = ({ onReset }) => {\n  return (\n    <Button\n      className=\"board-header__reset\"\n      variant=\"dark\"\n      onClick={onReset}\n    >\n      Reset\n    </Button>\n  );\n}","import { Button } from \"react-bootstrap\";\n\nimport \"./BoardHistory.css\";\n\nexport default function BoardHistory({ history, onSetGame }) {\n  const historyElements = history.map(({ turn, winner }, index) => (\n    // Note: While an index should not be used in theory, the index shouldn't change on each history element in this case\n    <HistoryItem\n      key={index}\n      index={index}\n      turn={turn}\n      winnerPlayer={winner?.player}\n      onSetGame={() => onSetGame(index)}\n    />\n  ));\n  return (\n    <div className=\"board-history\">\n      {historyElements.reverse()}\n    </div>\n  );\n}\n\nconst HistoryItem = ({ index, turn, winnerPlayer, onSetGame }) => {\n  return (\n    <Button className=\"board-history__item\" variant=\"dark\" onClick={() => onSetGame(index)}>\n      { winnerPlayer ? `${winnerPlayer} won in ${turn} turns` : `Lasted ${turn} turns`}\n    </Button>\n  );\n}\n","import BoardHeader from './BoardHeader';\nimport BoardHistory from './BoardHistory';\n\nimport './BoardSidebar.css';\n\nexport default function BoardSidebar({ current, history, onReset, onSetGame }) {\n  return (\n    <div className=\"board-sidebar\">\n      <div className=\"board-sidebar__progress\">\n        <BoardHeader \n          turn={current.turn}\n          player={current.player()}\n          winner={current.winner}\n          onReset={onReset}\n        />\n        <BoardHistory\n          history={history}\n          onSetGame={onSetGame}\n        />\n      </div>\n    </div>\n  )\n}","import _ from \"lodash\";\nimport { useReducer } from \"react\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport { PLAYER_RED_TILE, PLAYER_YELLOW_TILE } from \"../utils/ApplicationConstants\";\nimport checkWinner from \"../utils/WinnerCalculator\";\nimport Board from \"./Board/Board\";\nimport BoardSidebar from \"./BoardSidebar/BoardSidebar\";\n\nimport \"./Game.css\";\n\nconst initialState = {\n  current: {\n    turn: 0,\n    tileMatrix: Array(6).fill([]).map(() => Array(7).fill(null)),\n    winner: {},\n    player: function() { return this.turn % 2 === 0 ? PLAYER_RED_TILE : PLAYER_YELLOW_TILE; },\n  },\n  history: []\n};\n\nconst actionTypes = Object.freeze({\n  SET_TILE: \"SET_TILE\",\n  RESET: \"RESET\",\n  SET_GAME: \"SET_GAME\",\n});\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case actionTypes.SET_TILE:\n      const currentTileMatrix = _.cloneDeep(state.current.tileMatrix),\n            highestRow = _.findLastIndex(currentTileMatrix, tileRow => !tileRow[action.column]);\n      \n      if (highestRow === -1) return state;\n      currentTileMatrix[highestRow][action.column] = state.current.player();\n      \n      const current = {\n        ...state.current,\n        turn: state.current.turn + 1,\n        tileMatrix: currentTileMatrix,\n        winner: checkWinner(currentTileMatrix)\n      };\n      return { ...state, current };\n    case actionTypes.RESET:\n      return { ...initialState, history: _.concat(_.cloneDeep(state.history), _.cloneDeep(state.current)) };\n    case actionTypes.SET_GAME:\n      return { ...state, current: state.history[action.index] };\n    default:\n      return state;\n  }\n}\n\nexport default function Game() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <Board \n            current={state.current}\n            onPlayAgain={() => dispatch({ type: actionTypes.RESET })}\n            onTileClick={(column) => dispatch({ type: actionTypes.SET_TILE, column: column })}\n          />\n        </Col>\n        <Col xs={12} lg>\n          <BoardSidebar \n            current={state.current}\n            history={state.history}\n            onReset={() => dispatch({ type: actionTypes.RESET })}\n            onSetGame={(index) => dispatch({ type: actionTypes.SET_GAME, index: index })}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import { Badge, Col, Container, Image, Row } from \"react-bootstrap\";\nimport { BASE_HOST_URL } from \"../utils/ApplicationConstants\";\nimport Game from \"./Game\";\n\nimport \"./App.css\";\n\nexport default function App() {\n  return (\n    <Container className=\"app\">\n      <Row>\n        <Col className=\"app__header\">\n          <Image src={`${BASE_HOST_URL}/images/connect-four-logo.png`} />\n          <div className=\"app__about\">\n            <Badge variant=\"dark\">React</Badge>\n            <Badge variant=\"dark\">React-Bootstrap</Badge>\n            <Badge variant=\"dark\">React-Transition-Group</Badge>\n            <Badge variant=\"dark\">JavaScript</Badge>\n            <Badge variant=\"dark\">CSS</Badge>\n            <Badge variant=\"dark\">HTML</Badge>\n          </div>\n        </Col>\n      </Row>\n      <Row noGutters>\n        <Col>\n          <Game />\n        </Col>\n      </Row>\n      <Row>\n        <Col className=\"app__footer\">\n          <h2>Description</h2>\n          <p>Connect-Four is a <a href=\"https://en.wikipedia.org/wiki/Tic-tac-toe\" rel=\"noreferrer\" target=\"_blank\">tic-tac-toe</a>-like two-player game in which players alternately place pieces on a vertical board 7 columns across and 6 rows high. Each player uses pieces of a particular color (commonly black and red, or sometimes yellow and red), and the object is to be the first to obtain four pieces in a horizontal, vertical, or diagonal line. Because the board is vertical, pieces inserted in a given column always drop to the lowest unoccupied row of that column. As soon as a column contains 6 pieces, it is full and no other piece can be placed in the column.</p>\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}